package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set SpriteStyleQuerySet

// SpriteStyleQuerySet is an queryset type for SpriteStyle
type SpriteStyleQuerySet struct {
	db *gorm.DB
}

// NewSpriteStyleQuerySet constructs new SpriteStyleQuerySet
func NewSpriteStyleQuerySet(db *gorm.DB) SpriteStyleQuerySet {
	return SpriteStyleQuerySet{
		db: db.Model(&SpriteStyle{}),
	}
}

func (qs SpriteStyleQuerySet) w(db *gorm.DB) SpriteStyleQuerySet {
	return NewSpriteStyleQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) All(ret *[]SpriteStyle) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *SpriteStyle) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtEq(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtGt(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtGte(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtLt(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtLte(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) CreatedAtNe(createdAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *SpriteStyle) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) Delete() error {
	return qs.db.Delete(SpriteStyle{}).Error
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) DescriptionEq(description string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("description = ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) DescriptionIn(description string, descriptionRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description IN (?)", iArgs))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) DescriptionNe(description string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("description != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) DescriptionNotIn(description string, descriptionRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{description}
	for _, arg := range descriptionRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", iArgs))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) GetUpdater() SpriteStyleUpdater {
	return NewSpriteStyleUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDEq(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDGt(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDGte(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDIn(ID uint, IDRest ...uint) SpriteStyleQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDLt(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDLte(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDNe(ID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) IDNotIn(ID uint, IDRest ...uint) SpriteStyleQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) Limit(limit int) SpriteStyleQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) NameEq(name string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("name = ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) NameIn(name string, nameRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name IN (?)", iArgs))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) NameNe(name string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("name != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) NameNotIn(name string, nameRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{name}
	for _, arg := range nameRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", iArgs))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs SpriteStyleQuerySet) One(ret *SpriteStyle) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderAscByCreatedAt() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderAscByID() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscBySpriteID is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderAscBySpriteID() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("sprite_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderAscByUpdatedAt() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderDescByCreatedAt() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderDescByID() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescBySpriteID is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderDescBySpriteID() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("sprite_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) OrderDescByUpdatedAt() SpriteStyleQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetCreatedAt(createdAt time.Time) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetDescription(description string) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.Description)] = description
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetID(ID uint) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetName(name string) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.Name)] = name
	return u
}

// SetSpriteID is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetSpriteID(spriteID uint) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.SpriteID)] = spriteID
	return u
}

// SetUID is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetUID(UID string) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.UID)] = UID
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) SetUpdatedAt(updatedAt time.Time) SpriteStyleUpdater {
	u.fields[string(SpriteStyleDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SpriteIDEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDEq(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id = ?", spriteID))
}

// SpriteIDGt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDGt(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id > ?", spriteID))
}

// SpriteIDGte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDGte(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id >= ?", spriteID))
}

// SpriteIDIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDIn(spriteID uint, spriteIDRest ...uint) SpriteStyleQuerySet {
	iArgs := []interface{}{spriteID}
	for _, arg := range spriteIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sprite_id IN (?)", iArgs))
}

// SpriteIDLt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDLt(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id < ?", spriteID))
}

// SpriteIDLte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDLte(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id <= ?", spriteID))
}

// SpriteIDNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDNe(spriteID uint) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("sprite_id != ?", spriteID))
}

// SpriteIDNotIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) SpriteIDNotIn(spriteID uint, spriteIDRest ...uint) SpriteStyleQuerySet {
	iArgs := []interface{}{spriteID}
	for _, arg := range spriteIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("sprite_id NOT IN (?)", iArgs))
}

// UIDEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UIDEq(UID string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("uid = ?", UID))
}

// UIDIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UIDIn(UID string, UIDRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{UID}
	for _, arg := range UIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("uid IN (?)", iArgs))
}

// UIDNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UIDNe(UID string) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("uid != ?", UID))
}

// UIDNotIn is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UIDNotIn(UID string, UIDRest ...string) SpriteStyleQuerySet {
	iArgs := []interface{}{UID}
	for _, arg := range UIDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("uid NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u SpriteStyleUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtEq(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtGt(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtGte(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtLt(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtLte(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs SpriteStyleQuerySet) UpdatedAtNe(updatedAt time.Time) SpriteStyleQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set SpriteStyleQuerySet

// ===== BEGIN of SpriteStyle modifiers

type spriteStyleDBSchemaField string

func (f spriteStyleDBSchemaField) String() string {
	return string(f)
}

// SpriteStyleDBSchema stores db field names of SpriteStyle
var SpriteStyleDBSchema = struct {
	ID          spriteStyleDBSchemaField
	CreatedAt   spriteStyleDBSchemaField
	UpdatedAt   spriteStyleDBSchemaField
	Name        spriteStyleDBSchemaField
	Description spriteStyleDBSchemaField
	UID         spriteStyleDBSchemaField
	SpriteID    spriteStyleDBSchemaField
}{

	ID:          spriteStyleDBSchemaField("id"),
	CreatedAt:   spriteStyleDBSchemaField("created_at"),
	UpdatedAt:   spriteStyleDBSchemaField("updated_at"),
	Name:        spriteStyleDBSchemaField("name"),
	Description: spriteStyleDBSchemaField("description"),
	UID:         spriteStyleDBSchemaField("uid"),
	SpriteID:    spriteStyleDBSchemaField("sprite_id"),
}

// Update updates SpriteStyle fields by primary key
func (o *SpriteStyle) Update(db *gorm.DB, fields ...spriteStyleDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":          o.ID,
		"created_at":  o.CreatedAt,
		"updated_at":  o.UpdatedAt,
		"name":        o.Name,
		"description": o.Description,
		"uid":         o.UID,
		"sprite_id":   o.SpriteID,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update SpriteStyle %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// SpriteStyleUpdater is an SpriteStyle updates manager
type SpriteStyleUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewSpriteStyleUpdater creates new SpriteStyle updater
func NewSpriteStyleUpdater(db *gorm.DB) SpriteStyleUpdater {
	return SpriteStyleUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&SpriteStyle{}),
	}
}

// ===== END of SpriteStyle modifiers

// ===== END of all query sets
