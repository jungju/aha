{
    "swagger": "2.0",
    "info": {
        "title": "aha API",
        "description": "집뷰CRM API",
        "version": "1.0.0",
        "termsOfService": "http://aha.com",
        "contact": {
            "email": "maximus@olimplanet.com"
        },
        "license": {
            "name": "Private"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/frames/": {
            "get": {
                "tags": [
                    "frames"
                ],
                "description": "get Frame",
                "operationId": "FrameController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Frame"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "frames"
                ],
                "description": "create Frame",
                "operationId": "FrameController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Frame content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateFrame"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Frame"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/frames/{id}": {
            "get": {
                "tags": [
                    "frames"
                ],
                "description": "get Frame by id",
                "operationId": "FrameController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Frame"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "frames"
                ],
                "description": "update the Frame",
                "operationId": "FrameController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Frame content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateFrame"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Frame"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "frames"
                ],
                "description": "delete the Frame",
                "operationId": "FrameController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/scenes/": {
            "get": {
                "tags": [
                    "scenes"
                ],
                "description": "get Scene",
                "operationId": "SceneController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Scene"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "scenes"
                ],
                "description": "create Scene",
                "operationId": "SceneController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Scene content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateScene"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Scene"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/scenes/{id}": {
            "get": {
                "tags": [
                    "scenes"
                ],
                "description": "get Scene by id",
                "operationId": "SceneController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Scene"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "scenes"
                ],
                "description": "update the Scene",
                "operationId": "SceneController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Scene content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateScene"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Scene"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "scenes"
                ],
                "description": "delete the Scene",
                "operationId": "SceneController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/spriteStyles/": {
            "get": {
                "tags": [
                    "spriteStyles"
                ],
                "description": "get SpriteStyle",
                "operationId": "SpriteStyleController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SpriteStyle"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "spriteStyles"
                ],
                "description": "create SpriteStyle",
                "operationId": "SpriteStyleController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SpriteStyle content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateSpriteStyle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.SpriteStyle"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/spriteStyles/{id}": {
            "get": {
                "tags": [
                    "spriteStyles"
                ],
                "description": "get SpriteStyle by id",
                "operationId": "SpriteStyleController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SpriteStyle"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "spriteStyles"
                ],
                "description": "update the SpriteStyle",
                "operationId": "SpriteStyleController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for SpriteStyle content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateSpriteStyle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SpriteStyle"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "spriteStyles"
                ],
                "description": "delete the SpriteStyle",
                "operationId": "SpriteStyleController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/sprites/": {
            "get": {
                "tags": [
                    "sprites"
                ],
                "description": "get Sprite",
                "operationId": "SpriteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sprite"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "sprites"
                ],
                "description": "create Sprite",
                "operationId": "SpriteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Sprite content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateSprite"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Sprite"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/sprites/{id}": {
            "get": {
                "tags": [
                    "sprites"
                ],
                "description": "get Sprite by id",
                "operationId": "SpriteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sprite"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "sprites"
                ],
                "description": "update the Sprite",
                "operationId": "SpriteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Sprite content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateSprite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sprite"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "sprites"
                ],
                "description": "delete the Sprite",
                "operationId": "SpriteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/stories/": {
            "get": {
                "tags": [
                    "stories"
                ],
                "description": "get Story",
                "operationId": "StoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responses.Story"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "stories"
                ],
                "description": "create Story",
                "operationId": "StoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Story content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateStory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Story"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        },
        "/stories/{id}": {
            "get": {
                "tags": [
                    "stories"
                ],
                "description": "get Story by id",
                "operationId": "StoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/responses.Story"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "stories"
                ],
                "description": "update the Story",
                "operationId": "StoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Story content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateStory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Story"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "stories"
                ],
                "description": "delete the Story",
                "operationId": "StoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "id is empty"
                    }
                },
                "security": [
                    {
                        "userAPIKey": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "models.Frame": {
            "title": "Frame",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "SpriteStyles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SpriteStyle"
                    }
                },
                "StartType": {
                    "type": "string"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Scene": {
            "title": "Scene",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Frames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Frame"
                    }
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "Story": {
                    "$ref": "#/definitions/models.Story"
                },
                "StoryID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Sprite": {
            "title": "Sprite",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "ImageURL": {
                    "type": "string"
                },
                "IsRelation": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "RelationA": {
                    "$ref": "#/definitions/models.Sprite"
                },
                "RelationB": {
                    "$ref": "#/definitions/models.Sprite"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.SpriteStyle": {
            "title": "SpriteStyle",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "SpriteID": {
                    "type": "integer",
                    "format": "int32"
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "models.Story": {
            "title": "Story",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "Scenes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Scene"
                    }
                },
                "SpriteStyle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SpriteStyle"
                    }
                },
                "UID": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "requests.CreateFrame": {
            "title": "CreateFrame",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.CreateScene": {
            "title": "CreateScene",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.CreateSprite": {
            "title": "CreateSprite",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.CreateSpriteStyle": {
            "title": "CreateSpriteStyle",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.CreateStory": {
            "title": "CreateStory",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateFrame": {
            "title": "UpdateFrame",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateScene": {
            "title": "UpdateScene",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateSprite": {
            "title": "UpdateSprite",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateSpriteStyle": {
            "title": "UpdateSpriteStyle",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateStory": {
            "title": "UpdateStory",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "responses.Frame": {
            "title": "Frame",
            "type": "object",
            "properties": {
                "createdat": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "spritestyles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.SpriteStyle"
                    }
                },
                "starttype": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedat": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "responses.Scene": {
            "title": "Scene",
            "type": "object",
            "properties": {
                "createdat": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "frames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Frame"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "storyid": {
                    "type": "integer",
                    "format": "int32"
                },
                "uid": {
                    "type": "string"
                },
                "updatedat": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "responses.Sprite": {
            "title": "Sprite",
            "type": "object",
            "properties": {
                "createdat": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "imageurl": {
                    "type": "string"
                },
                "isrelation": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "relationa": {
                    "$ref": "#/definitions/responses.Sprite"
                },
                "relationb": {
                    "$ref": "#/definitions/responses.Sprite"
                },
                "uid": {
                    "type": "string"
                },
                "updatedat": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "responses.SpriteStyle": {
            "title": "SpriteStyle",
            "type": "object",
            "properties": {
                "createdat": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "sprited": {
                    "$ref": "#/definitions/responses.Sprite"
                },
                "uid": {
                    "type": "string"
                },
                "updatedat": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "responses.Story": {
            "title": "Story",
            "type": "object",
            "properties": {
                "createdat": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "scenes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Scene"
                    }
                },
                "uid": {
                    "type": "string"
                },
                "updatedat": {
                    "type": "string",
                    "format": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "userAPIKey": {
            "type": "apiKey",
            "description": "I love auto-generated docs",
            "name": "X-USER-AUTH-TOKEN",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "sprites",
            "description": " SpriteController operations for Sprite\n"
        },
        {
            "name": "spriteStyles",
            "description": " SpriteStyleController operations for SpriteStyle\n"
        },
        {
            "name": "stories",
            "description": " StoryController operations for Story\n"
        },
        {
            "name": "scenes",
            "description": " SceneController operations for Scene\n"
        },
        {
            "name": "frames",
            "description": " FrameController operations for Frame\n"
        }
    ]
}