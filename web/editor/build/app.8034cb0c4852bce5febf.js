webpackJsonp([0],{

/***/ "./app/app.js":
/*!********************************!*\
  !*** ./app/app.js + 3 modules ***!
  \********************************/
/*! no exports provided */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is an entry point */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/whs/build/whs.module.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/three/build/three.module.js (<- Module is referenced from these modules with unsupported syntax: ./node_modules/whs/build/whs.module.js (referenced with cjs require)) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/whs/build/whs.module.js\nvar whs_module = __webpack_require__(\"./node_modules/whs/build/whs.module.js\");\nvar whs_module_default = /*#__PURE__*/__webpack_require__.n(whs_module);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(\"./node_modules/three/build/three.module.js\");\n\n// EXTERNAL MODULE: ./node_modules/glslify/browser.js\nvar browser = __webpack_require__(\"./node_modules/glslify/browser.js\");\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./app/modules/vertex.glsl\nvar vertex = __webpack_require__(\"./app/modules/vertex.glsl\");\nvar vertex_default = /*#__PURE__*/__webpack_require__.n(vertex);\n\n// EXTERNAL MODULE: ./app/modules/fragment.glsl\nvar fragment = __webpack_require__(\"./app/modules/fragment.glsl\");\nvar fragment_default = /*#__PURE__*/__webpack_require__.n(fragment);\n\n// CONCATENATED MODULE: ./app/modules/FancyMaterialModule.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\n\n\n\n\nvar FancyMaterialModule_FancyMaterialModule = function FancyMaterialModule(app) {\n  _classCallCheck(this, FancyMaterialModule);\n\n  this.bridge = {\n    material: function material() {\n      var material = new three_module[\"ShaderMaterial\"]({\n        uniforms: {\n          time: { value: 1.0 }\n        },\n        vertexShader: vertex_default.a,\n        fragmentShader: fragment_default.a\n      });\n\n      new whs_module[\"Loop\"](function (c) {\n        //material.uniforms.time.value += c.getDelta();\n      }).start(app);\n\n      return material;\n    }\n  };\n};\n// CONCATENATED MODULE: ./app/components/BasicComponent.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction BasicComponent__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar BasicComponent_BasicComponent = function (_MeshComponent) {\n  _inherits(BasicComponent, _MeshComponent);\n\n  function BasicComponent() {\n    BasicComponent__classCallCheck(this, BasicComponent);\n\n    return _possibleConstructorReturn(this, (BasicComponent.__proto__ || Object.getPrototypeOf(BasicComponent)).apply(this, arguments));\n  }\n\n  _createClass(BasicComponent, [{\n    key: 'build',\n    value: function build() {\n      return new three_module[\"Mesh\"](new three_module[\"IcosahedronGeometry\"](3, 5), this.applyBridge({\n        material: new three_module[\"MeshBasicMaterial\"]({ color: 0xffffff })\n      }).material);\n    }\n  }]);\n\n  return BasicComponent;\n}(whs_module[\"MeshComponent\"]);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(\"./node_modules/axios/index.js\");\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n\n// EXTERNAL MODULE: ./node_modules/qs/lib/index.js\nvar lib = __webpack_require__(\"./node_modules/qs/lib/index.js\");\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// CONCATENATED MODULE: ./app/client.js\n/* eslint-disable */\n\n\nvar domain = '';\nvar getDomain = function getDomain() {\n  return domain;\n};\nvar setDomain = function setDomain($domain) {\n  domain = $domain;\n};\nvar client_request = function request(method, url, body, queryParameters, form, config) {\n  method = method.toLowerCase();\n  var keys = Object.keys(queryParameters);\n  var queryUrl = url;\n  if (keys.length > 0) {\n    queryUrl = url + '?' + lib_default.a.stringify(queryParameters);\n  }\n  // let queryUrl = url+(keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\n  if (body) {\n    return axios_default.a[method](queryUrl, body, config);\n  } else if (method === 'get' || method === 'delete' || method === 'head' || method === 'option') {\n    return axios_default.a[method](queryUrl, config);\n  } else {\n    return axios_default.a[method](queryUrl, lib_default.a.stringify(form), config);\n  }\n};\n/*==========================================================\n *                    집뷰CRM API\n ==========================================================*/\n/**\n * get Frame\n * request: FrameController_Get_All\n * url: FrameController_Get_AllURL\n * method: FrameController_Get_All_TYPE\n * raw_url: FrameController_Get_All_RAW_URL\n * @param query - Filter. e.g. col1:v1,col2:v2 ...\n * @param fields - Fields returned. e.g. col1,col2 ...\n * @param sortby - Sorted-by fields. e.g. col1,col2 ...\n * @param order - Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...\n * @param limit - Limit the size of result set. Must be an integer\n * @param offset - Start position of result set. Must be an integer\n */\nvar FrameController_Get_All = function FrameController_Get_All() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/frames/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar FrameController_Get_All_RAW_URL = function FrameController_Get_All_RAW_URL() {\n  return '/frames/';\n};\nvar FrameController_Get_All_TYPE = function FrameController_Get_All_TYPE() {\n  return 'get';\n};\nvar FrameController_Get_AllURL = function FrameController_Get_AllURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/frames/';\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * create Frame\n * request: FrameController_Post\n * url: FrameController_PostURL\n * method: FrameController_Post_TYPE\n * raw_url: FrameController_Post_RAW_URL\n * @param body - body for Frame content\n */\nvar FrameController_Post = function FrameController_Post() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/frames/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('post', domain + path, body, queryParameters, form, config);\n};\nvar FrameController_Post_RAW_URL = function FrameController_Post_RAW_URL() {\n  return '/frames/';\n};\nvar FrameController_Post_TYPE = function FrameController_Post_TYPE() {\n  return 'post';\n};\nvar FrameController_PostURL = function FrameController_PostURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/frames/';\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Frame by id\n * request: FrameController_Get_One\n * url: FrameController_Get_OneURL\n * method: FrameController_Get_One_TYPE\n * raw_url: FrameController_Get_One_RAW_URL\n * @param id - The key for staticblock\n */\nvar FrameController_Get_One = function FrameController_Get_One() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/frames/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar FrameController_Get_One_RAW_URL = function FrameController_Get_One_RAW_URL() {\n  return '/frames/{id}';\n};\nvar FrameController_Get_One_TYPE = function FrameController_Get_One_TYPE() {\n  return 'get';\n};\nvar FrameController_Get_OneURL = function FrameController_Get_OneURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/frames/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * update the Frame\n * request: FrameController_Put\n * url: FrameController_PutURL\n * method: FrameController_Put_TYPE\n * raw_url: FrameController_Put_RAW_URL\n * @param id - The id you want to update\n * @param body - body for Frame content\n */\nvar FrameController_Put = function FrameController_Put() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/frames/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('put', domain + path, body, queryParameters, form, config);\n};\nvar FrameController_Put_RAW_URL = function FrameController_Put_RAW_URL() {\n  return '/frames/{id}';\n};\nvar FrameController_Put_TYPE = function FrameController_Put_TYPE() {\n  return 'put';\n};\nvar FrameController_PutURL = function FrameController_PutURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/frames/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * delete the Frame\n * request: FrameController_Delete\n * url: FrameController_DeleteURL\n * method: FrameController_Delete_TYPE\n * raw_url: FrameController_Delete_RAW_URL\n * @param id - The id you want to delete\n */\nvar FrameController_Delete = function FrameController_Delete() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/frames/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('delete', domain + path, body, queryParameters, form, config);\n};\nvar FrameController_Delete_RAW_URL = function FrameController_Delete_RAW_URL() {\n  return '/frames/{id}';\n};\nvar FrameController_Delete_TYPE = function FrameController_Delete_TYPE() {\n  return 'delete';\n};\nvar FrameController_DeleteURL = function FrameController_DeleteURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/frames/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Scene\n * request: SceneController_Get_All\n * url: SceneController_Get_AllURL\n * method: SceneController_Get_All_TYPE\n * raw_url: SceneController_Get_All_RAW_URL\n * @param query - Filter. e.g. col1:v1,col2:v2 ...\n * @param fields - Fields returned. e.g. col1,col2 ...\n * @param sortby - Sorted-by fields. e.g. col1,col2 ...\n * @param order - Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...\n * @param limit - Limit the size of result set. Must be an integer\n * @param offset - Start position of result set. Must be an integer\n */\nvar SceneController_Get_All = function SceneController_Get_All() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/scenes/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SceneController_Get_All_RAW_URL = function SceneController_Get_All_RAW_URL() {\n  return '/scenes/';\n};\nvar SceneController_Get_All_TYPE = function SceneController_Get_All_TYPE() {\n  return 'get';\n};\nvar SceneController_Get_AllURL = function SceneController_Get_AllURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/scenes/';\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * create Scene\n * request: SceneController_Post\n * url: SceneController_PostURL\n * method: SceneController_Post_TYPE\n * raw_url: SceneController_Post_RAW_URL\n * @param body - body for Scene content\n */\nvar SceneController_Post = function SceneController_Post() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/scenes/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('post', domain + path, body, queryParameters, form, config);\n};\nvar SceneController_Post_RAW_URL = function SceneController_Post_RAW_URL() {\n  return '/scenes/';\n};\nvar SceneController_Post_TYPE = function SceneController_Post_TYPE() {\n  return 'post';\n};\nvar SceneController_PostURL = function SceneController_PostURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/scenes/';\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Scene by id\n * request: SceneController_Get_One\n * url: SceneController_Get_OneURL\n * method: SceneController_Get_One_TYPE\n * raw_url: SceneController_Get_One_RAW_URL\n * @param id - The key for staticblock\n */\nvar SceneController_Get_One = function SceneController_Get_One() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/scenes/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SceneController_Get_One_RAW_URL = function SceneController_Get_One_RAW_URL() {\n  return '/scenes/{id}';\n};\nvar SceneController_Get_One_TYPE = function SceneController_Get_One_TYPE() {\n  return 'get';\n};\nvar SceneController_Get_OneURL = function SceneController_Get_OneURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/scenes/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * update the Scene\n * request: SceneController_Put\n * url: SceneController_PutURL\n * method: SceneController_Put_TYPE\n * raw_url: SceneController_Put_RAW_URL\n * @param id - The id you want to update\n * @param body - body for Scene content\n */\nvar SceneController_Put = function SceneController_Put() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/scenes/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('put', domain + path, body, queryParameters, form, config);\n};\nvar SceneController_Put_RAW_URL = function SceneController_Put_RAW_URL() {\n  return '/scenes/{id}';\n};\nvar SceneController_Put_TYPE = function SceneController_Put_TYPE() {\n  return 'put';\n};\nvar SceneController_PutURL = function SceneController_PutURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/scenes/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * delete the Scene\n * request: SceneController_Delete\n * url: SceneController_DeleteURL\n * method: SceneController_Delete_TYPE\n * raw_url: SceneController_Delete_RAW_URL\n * @param id - The id you want to delete\n */\nvar SceneController_Delete = function SceneController_Delete() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/scenes/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('delete', domain + path, body, queryParameters, form, config);\n};\nvar SceneController_Delete_RAW_URL = function SceneController_Delete_RAW_URL() {\n  return '/scenes/{id}';\n};\nvar SceneController_Delete_TYPE = function SceneController_Delete_TYPE() {\n  return 'delete';\n};\nvar SceneController_DeleteURL = function SceneController_DeleteURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/scenes/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get SpriteStyle\n * request: SpriteStyleController_Get_All\n * url: SpriteStyleController_Get_AllURL\n * method: SpriteStyleController_Get_All_TYPE\n * raw_url: SpriteStyleController_Get_All_RAW_URL\n * @param query - Filter. e.g. col1:v1,col2:v2 ...\n * @param fields - Fields returned. e.g. col1,col2 ...\n * @param sortby - Sorted-by fields. e.g. col1,col2 ...\n * @param order - Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...\n * @param limit - Limit the size of result set. Must be an integer\n * @param offset - Start position of result set. Must be an integer\n */\nvar SpriteStyleController_Get_All = function SpriteStyleController_Get_All() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/spriteStyles/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SpriteStyleController_Get_All_RAW_URL = function SpriteStyleController_Get_All_RAW_URL() {\n  return '/spriteStyles/';\n};\nvar SpriteStyleController_Get_All_TYPE = function SpriteStyleController_Get_All_TYPE() {\n  return 'get';\n};\nvar SpriteStyleController_Get_AllURL = function SpriteStyleController_Get_AllURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/spriteStyles/';\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * create SpriteStyle\n * request: SpriteStyleController_Post\n * url: SpriteStyleController_PostURL\n * method: SpriteStyleController_Post_TYPE\n * raw_url: SpriteStyleController_Post_RAW_URL\n * @param body - body for SpriteStyle content\n */\nvar SpriteStyleController_Post = function SpriteStyleController_Post() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/spriteStyles/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('post', domain + path, body, queryParameters, form, config);\n};\nvar SpriteStyleController_Post_RAW_URL = function SpriteStyleController_Post_RAW_URL() {\n  return '/spriteStyles/';\n};\nvar SpriteStyleController_Post_TYPE = function SpriteStyleController_Post_TYPE() {\n  return 'post';\n};\nvar SpriteStyleController_PostURL = function SpriteStyleController_PostURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/spriteStyles/';\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get SpriteStyle by id\n * request: SpriteStyleController_Get_One\n * url: SpriteStyleController_Get_OneURL\n * method: SpriteStyleController_Get_One_TYPE\n * raw_url: SpriteStyleController_Get_One_RAW_URL\n * @param id - The key for staticblock\n */\nvar SpriteStyleController_Get_One = function SpriteStyleController_Get_One() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/spriteStyles/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SpriteStyleController_Get_One_RAW_URL = function SpriteStyleController_Get_One_RAW_URL() {\n  return '/spriteStyles/{id}';\n};\nvar SpriteStyleController_Get_One_TYPE = function SpriteStyleController_Get_One_TYPE() {\n  return 'get';\n};\nvar SpriteStyleController_Get_OneURL = function SpriteStyleController_Get_OneURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/spriteStyles/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * update the SpriteStyle\n * request: SpriteStyleController_Put\n * url: SpriteStyleController_PutURL\n * method: SpriteStyleController_Put_TYPE\n * raw_url: SpriteStyleController_Put_RAW_URL\n * @param id - The id you want to update\n * @param body - body for SpriteStyle content\n */\nvar SpriteStyleController_Put = function SpriteStyleController_Put() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/spriteStyles/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('put', domain + path, body, queryParameters, form, config);\n};\nvar SpriteStyleController_Put_RAW_URL = function SpriteStyleController_Put_RAW_URL() {\n  return '/spriteStyles/{id}';\n};\nvar SpriteStyleController_Put_TYPE = function SpriteStyleController_Put_TYPE() {\n  return 'put';\n};\nvar SpriteStyleController_PutURL = function SpriteStyleController_PutURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/spriteStyles/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * delete the SpriteStyle\n * request: SpriteStyleController_Delete\n * url: SpriteStyleController_DeleteURL\n * method: SpriteStyleController_Delete_TYPE\n * raw_url: SpriteStyleController_Delete_RAW_URL\n * @param id - The id you want to delete\n */\nvar SpriteStyleController_Delete = function SpriteStyleController_Delete() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/spriteStyles/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('delete', domain + path, body, queryParameters, form, config);\n};\nvar SpriteStyleController_Delete_RAW_URL = function SpriteStyleController_Delete_RAW_URL() {\n  return '/spriteStyles/{id}';\n};\nvar SpriteStyleController_Delete_TYPE = function SpriteStyleController_Delete_TYPE() {\n  return 'delete';\n};\nvar SpriteStyleController_DeleteURL = function SpriteStyleController_DeleteURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/spriteStyles/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Sprite\n * request: SpriteController_Get_All\n * url: SpriteController_Get_AllURL\n * method: SpriteController_Get_All_TYPE\n * raw_url: SpriteController_Get_All_RAW_URL\n * @param query - Filter. e.g. col1:v1,col2:v2 ...\n * @param fields - Fields returned. e.g. col1,col2 ...\n * @param sortby - Sorted-by fields. e.g. col1,col2 ...\n * @param order - Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...\n * @param limit - Limit the size of result set. Must be an integer\n * @param offset - Start position of result set. Must be an integer\n */\nvar SpriteController_Get_All = function SpriteController_Get_All() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/sprites/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SpriteController_Get_All_RAW_URL = function SpriteController_Get_All_RAW_URL() {\n  return '/sprites/';\n};\nvar SpriteController_Get_All_TYPE = function SpriteController_Get_All_TYPE() {\n  return 'get';\n};\nvar SpriteController_Get_AllURL = function SpriteController_Get_AllURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/sprites/';\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * create Sprite\n * request: SpriteController_Post\n * url: SpriteController_PostURL\n * method: SpriteController_Post_TYPE\n * raw_url: SpriteController_Post_RAW_URL\n * @param body - body for Sprite content\n */\nvar SpriteController_Post = function SpriteController_Post() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/sprites/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('post', domain + path, body, queryParameters, form, config);\n};\nvar SpriteController_Post_RAW_URL = function SpriteController_Post_RAW_URL() {\n  return '/sprites/';\n};\nvar SpriteController_Post_TYPE = function SpriteController_Post_TYPE() {\n  return 'post';\n};\nvar SpriteController_PostURL = function SpriteController_PostURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/sprites/';\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Sprite by id\n * request: SpriteController_Get_One\n * url: SpriteController_Get_OneURL\n * method: SpriteController_Get_One_TYPE\n * raw_url: SpriteController_Get_One_RAW_URL\n * @param id - The key for staticblock\n */\nvar SpriteController_Get_One = function SpriteController_Get_One() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/sprites/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar SpriteController_Get_One_RAW_URL = function SpriteController_Get_One_RAW_URL() {\n  return '/sprites/{id}';\n};\nvar SpriteController_Get_One_TYPE = function SpriteController_Get_One_TYPE() {\n  return 'get';\n};\nvar SpriteController_Get_OneURL = function SpriteController_Get_OneURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/sprites/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * update the Sprite\n * request: SpriteController_Put\n * url: SpriteController_PutURL\n * method: SpriteController_Put_TYPE\n * raw_url: SpriteController_Put_RAW_URL\n * @param id - The id you want to update\n * @param body - body for Sprite content\n */\nvar SpriteController_Put = function SpriteController_Put() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/sprites/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('put', domain + path, body, queryParameters, form, config);\n};\nvar SpriteController_Put_RAW_URL = function SpriteController_Put_RAW_URL() {\n  return '/sprites/{id}';\n};\nvar SpriteController_Put_TYPE = function SpriteController_Put_TYPE() {\n  return 'put';\n};\nvar SpriteController_PutURL = function SpriteController_PutURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/sprites/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * delete the Sprite\n * request: SpriteController_Delete\n * url: SpriteController_DeleteURL\n * method: SpriteController_Delete_TYPE\n * raw_url: SpriteController_Delete_RAW_URL\n * @param id - The id you want to delete\n */\nvar SpriteController_Delete = function SpriteController_Delete() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/sprites/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('delete', domain + path, body, queryParameters, form, config);\n};\nvar SpriteController_Delete_RAW_URL = function SpriteController_Delete_RAW_URL() {\n  return '/sprites/{id}';\n};\nvar SpriteController_Delete_TYPE = function SpriteController_Delete_TYPE() {\n  return 'delete';\n};\nvar SpriteController_DeleteURL = function SpriteController_DeleteURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/sprites/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Story\n * request: StoryController_Get_All\n * url: StoryController_Get_AllURL\n * method: StoryController_Get_All_TYPE\n * raw_url: StoryController_Get_All_RAW_URL\n * @param query - Filter. e.g. col1:v1,col2:v2 ...\n * @param fields - Fields returned. e.g. col1,col2 ...\n * @param sortby - Sorted-by fields. e.g. col1,col2 ...\n * @param order - Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...\n * @param limit - Limit the size of result set. Must be an integer\n * @param offset - Start position of result set. Must be an integer\n */\nvar StoryController_Get_All = function StoryController_Get_All() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/stories/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar StoryController_Get_All_RAW_URL = function StoryController_Get_All_RAW_URL() {\n  return '/stories/';\n};\nvar StoryController_Get_All_TYPE = function StoryController_Get_All_TYPE() {\n  return 'get';\n};\nvar StoryController_Get_AllURL = function StoryController_Get_AllURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/stories/';\n  if (parameters['query'] !== undefined) {\n    queryParameters['query'] = parameters['query'];\n  }\n  if (parameters['fields'] !== undefined) {\n    queryParameters['fields'] = parameters['fields'];\n  }\n  if (parameters['sortby'] !== undefined) {\n    queryParameters['sortby'] = parameters['sortby'];\n  }\n  if (parameters['order'] !== undefined) {\n    queryParameters['order'] = parameters['order'];\n  }\n  if (parameters['limit'] !== undefined) {\n    queryParameters['limit'] = parameters['limit'];\n  }\n  if (parameters['offset'] !== undefined) {\n    queryParameters['offset'] = parameters['offset'];\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * create Story\n * request: StoryController_Post\n * url: StoryController_PostURL\n * method: StoryController_Post_TYPE\n * raw_url: StoryController_Post_RAW_URL\n * @param body - body for Story content\n */\nvar StoryController_Post = function StoryController_Post() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/stories/';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('post', domain + path, body, queryParameters, form, config);\n};\nvar StoryController_Post_RAW_URL = function StoryController_Post_RAW_URL() {\n  return '/stories/';\n};\nvar StoryController_Post_TYPE = function StoryController_Post_TYPE() {\n  return 'post';\n};\nvar StoryController_PostURL = function StoryController_PostURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/stories/';\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * get Story by id\n * request: StoryController_Get_One\n * url: StoryController_Get_OneURL\n * method: StoryController_Get_One_TYPE\n * raw_url: StoryController_Get_One_RAW_URL\n * @param id - The key for staticblock\n */\nvar StoryController_Get_One = function StoryController_Get_One() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/stories/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('get', domain + path, body, queryParameters, form, config);\n};\nvar StoryController_Get_One_RAW_URL = function StoryController_Get_One_RAW_URL() {\n  return '/stories/{id}';\n};\nvar StoryController_Get_One_TYPE = function StoryController_Get_One_TYPE() {\n  return 'get';\n};\nvar StoryController_Get_OneURL = function StoryController_Get_OneURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/stories/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * update the Story\n * request: StoryController_Put\n * url: StoryController_PutURL\n * method: StoryController_Put_TYPE\n * raw_url: StoryController_Put_RAW_URL\n * @param id - The id you want to update\n * @param body - body for Story content\n */\nvar StoryController_Put = function StoryController_Put() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/stories/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters['body'] !== undefined) {\n    body = parameters['body'];\n  }\n  if (parameters['body'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: body'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('put', domain + path, body, queryParameters, form, config);\n};\nvar StoryController_Put_RAW_URL = function StoryController_Put_RAW_URL() {\n  return '/stories/{id}';\n};\nvar StoryController_Put_TYPE = function StoryController_Put_TYPE() {\n  return 'put';\n};\nvar StoryController_PutURL = function StoryController_PutURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/stories/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n/**\n * delete the Story\n * request: StoryController_Delete\n * url: StoryController_DeleteURL\n * method: StoryController_Delete_TYPE\n * raw_url: StoryController_Delete_RAW_URL\n * @param id - The id you want to delete\n */\nvar StoryController_Delete = function StoryController_Delete() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var config = parameters.$config;\n  var path = '/stories/{id}';\n  var body = void 0;\n  var queryParameters = {};\n  var form = {};\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters['id'] === undefined) {\n    return Promise.reject(new Error('Missing required  parameter: id'));\n  }\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  return client_request('delete', domain + path, body, queryParameters, form, config);\n};\nvar StoryController_Delete_RAW_URL = function StoryController_Delete_RAW_URL() {\n  return '/stories/{id}';\n};\nvar StoryController_Delete_TYPE = function StoryController_Delete_TYPE() {\n  return 'delete';\n};\nvar StoryController_DeleteURL = function StoryController_DeleteURL() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var queryParameters = {};\n  var domain = parameters.$domain ? parameters.$domain : getDomain();\n  var path = '/stories/{id}';\n  path = path.replace('{id}', '' + parameters['id']);\n  if (parameters.$queryParameters) {\n    Object.keys(parameters.$queryParameters).forEach(function (parameterName) {\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName];\n    });\n  }\n  var keys = Object.keys(queryParameters);\n  return domain + path + (keys.length > 0 ? '?' + keys.map(function (key) {\n    return key + '=' + encodeURIComponent(queryParameters[key]);\n  }).join('&') : '');\n};\n// CONCATENATED MODULE: ./app/app.js\n\n\n\n\n\n\n\nsetDomain('/v1');\n\nvar radiusMin = 110,\n    // Min radius of the asteroid belt.\nradiusMax = 320,\n    // Max radius of the asteroid belt.\nparticleCount = 900,\n    // Ammount of asteroids.\nparticleMinRadius = 0.1,\n    // Min of asteroid radius.\nparticleMaxRadius = 4,\n    // Max of asteroid radius.\nplanetSize = 50; // Radius of planet.\n\nvar colors = {\n  green: 0x8fc999,\n  blue: 0x5fc4d0,\n  orange: 0xee5624,\n  yellow: 0xfaff70\n};\n\nvar app_app = new whs_module[\"App\"]([new whs_module[\"ElementModule\"](), new whs_module[\"SceneModule\"](), new whs_module[\"DefineModule\"]('camera', new whs_module[\"PerspectiveCamera\"]({\n  position: new three_module[\"Vector3\"](0, 100, 400),\n  far: 2000,\n  fov: 75,\n  near: 1\n})), new whs_module[\"RenderingModule\"]({\n  bgColor: 0x2a3340,\n\n  renderer: {\n    antialias: true,\n    shadowmap: {\n      type: three_module[\"PCFSoftShadowMap\"]\n    }\n  }\n}, { shadow: true }), new whs_module[\"OrbitControlsModule\"](), new whs_module[\"ResizeModule\"]()]);\n\nvar space = new whs_module[\"Group\"]();\nspace.addTo(app_app);\nspace.rotation.z = Math.PI / 12;\n\nvar planet = new whs_module[\"Tetrahedron\"]({\n  geometry: {\n    radius: planetSize,\n    detail: 2\n  },\n\n  material: new three_module[\"MeshStandardMaterial\"]({\n    color: 0xee5624,\n    shading: three_module[\"FlatShading\"],\n    roughness: 0.9,\n    emissive: 0x270000\n  })\n});\n\nplanet.addTo(space);\n\n// LIGHTS.\nnew whs_module[\"AmbientLight\"]({\n  color: 0x663344,\n  intensity: 2\n}).addTo(app_app);\n\nnew whs_module[\"DirectionalLight\"]({\n  color: 0xffffff,\n  intensity: 1.5,\n  distance: 800,\n\n  shadow: {\n    mapSize: {\n      width: 2048,\n      height: 2048\n    },\n\n    camera: {\n      left: -800,\n      right: 800,\n      top: 800,\n      bottom: -800,\n      far: 800\n    }\n  },\n\n  position: {\n    x: 300,\n    z: 300,\n    y: 100\n  }\n}).addTo(app_app);\n\nvar dynamicGeometry = new whs_module[\"DynamicGeometryModule\"]();\n\nvar app_material = new three_module[\"MeshStandardMaterial\"]({\n  shading: three_module[\"FlatShading\"],\n  emissive: 0x270000,\n  roughness: 0.9\n});\n\nStoryController_Get_All({}).then(function (response) {\n  console.log(response.data);\n});\n// '/v1/stories/1'\n\n\nvar s1 = new whs_module[\"Dodecahedron\"]({\n  geometry: {\n    buffer: true,\n    radius: 10\n  },\n\n  modules: [dynamicGeometry],\n\n  material: app_material\n});\n\nvar s2 = new whs_module[\"Box\"]({\n  geometry: {\n    buffer: true,\n    width: 10,\n    height: 10,\n    depth: 10\n  },\n\n  modules: [dynamicGeometry],\n\n  material: app_material\n});\n\nvar s3 = new whs_module[\"Cylinder\"]({\n  geometry: {\n    buffer: true,\n    radiusTop: 0,\n    radiusBottom: 10,\n    height: 10\n  },\n\n  modules: [dynamicGeometry],\n\n  material: app_material\n});\n\nvar s4 = new whs_module[\"Sphere\"]({\n  geometry: {\n    buffer: true,\n    radius: 10\n  },\n\n  modules: [dynamicGeometry],\n\n  material: app_material\n});\n\nvar asteroids = new whs_module[\"Group\"]();\nasteroids.addTo(space);\n\n// Materials.\nvar mat = [new three_module[\"MeshPhongMaterial\"]({ color: colors.green, shading: three_module[\"FlatShading\"] }), new three_module[\"MeshPhongMaterial\"]({ color: colors.blue, shading: three_module[\"FlatShading\"] }), new three_module[\"MeshPhongMaterial\"]({ color: colors.orange, shading: three_module[\"FlatShading\"] }), new three_module[\"MeshPhongMaterial\"]({ color: colors.yellow, shading: three_module[\"FlatShading\"] })];\n\nfor (var i = 0; i < particleCount; i++) {\n  var particle = [s1, s2, s3, s4][Math.ceil(Math.random() * 3)].clone(),\n      radius = particleMinRadius + Math.random() * (particleMaxRadius - particleMinRadius);\n\n  particle.g_({\n    radiusBottom: radius,\n    radiusTop: 0,\n    height: particle instanceof whs_module[\"Cylinder\"] ? radius * 2 : radius,\n    width: radius,\n    depth: radius,\n    radius: radius\n  });\n\n  particle.material = mat[Math.floor(4 * Math.random())]; // Set custom THREE.Material to mesh.\n\n  // Particle data.\n  particle.data = {\n    distance: radiusMin + Math.random() * (radiusMax - radiusMin),\n    angle: Math.random() * Math.PI * 2\n  };\n\n  // Set position & rotation.\n  particle.position.x = Math.cos(particle.data.angle) * particle.data.distance;\n  particle.position.z = Math.sin(particle.data.angle) * particle.data.distance;\n  particle.position.y = -10 * Math.random() + 4;\n\n  particle.rotation.set(Math.PI * 2 * Math.random(), Math.PI * 2 * Math.random(), Math.PI * 2 * Math.random());\n\n  particle.addTo(asteroids);\n}\n\n// Animating rotating shapes around planet.\nvar particles = asteroids.children;\nconsole.log(asteroids);\n\nvar animation = new whs_module[\"Loop\"](function () {\n  for (var _i = 0, max = particles.length; _i < max; _i++) {\n    var _particle = particles[_i];\n\n    _particle.data.angle += 0.02 * _particle.data.distance / radiusMax;\n\n    _particle.position.x = Math.cos(_particle.data.angle) * _particle.data.distance;\n    _particle.position.z = Math.sin(_particle.data.angle) * _particle.data.distance;\n\n    _particle.rotation.x += Math.PI / 60;\n    _particle.rotation.y += Math.PI / 60;\n  }\n\n  planet.rotation.y += 0.005;\n});\n\napp_app.addLoop(animation);\n\nanimation.start();\n\n// Start rendering.\napp_app.start();\n\n// const app = new App([\n//   new ElementModule(document.getElementById('app')),\n//   new SceneModule(),\n//   new DefineModule('camera', new PerspectiveCamera({\n//     position: {\n//       z: -15\n//     }\n//   })),\n//   new RenderingModule({bgColor: 0x000001}),\n//   new OrbitControlsModule()\n// ]);\n\n// app.add(new BasicComponent({\n//   modules: [\n//     new FancyMaterialModule(app)\n//   ]\n// }));\n\n// app.start();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/app.js\n");

/***/ }),

/***/ "./app/modules/fragment.glsl":
/*!***********************************!*\
  !*** ./app/modules/fragment.glsl ***!
  \***********************************/
/*! dynamic exports provided */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = \"#define GLSLIFY 1\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\n\\nuniform float time;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec4 mod289_1_0(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nfloat mod289_1_0(float x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nvec4 permute_1_1(vec4 x) {\\n     return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nfloat permute_1_1(float x) {\\n     return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat taylorInvSqrt_1_2(float r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec4 grad4_1_3(float j, vec4 ip)\\n  {\\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n  vec4 p,s;\\n\\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n  s = vec4(lessThan(p, vec4(0.0)));\\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\\n\\n  return p;\\n  }\\n\\n// (sqrt(5) - 1)/4 = F4, used once below\\n#define F4 0.309016994374947451\\n\\nfloat snoise_1_4(vec4 v)\\n  {\\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\\n                        0.276393202250021,  // 2 * G4\\n                        0.414589803375032,  // 3 * G4\\n                       -0.447213595499958); // -1 + 4 * G4\\n\\n// First corner\\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\\n  vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n// Other corners\\n\\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\\n  vec4 i0;\\n  vec3 isX = step( x0.yzw, x0.xxx );\\n  vec3 isYZ = step( x0.zww, x0.yyz );\\n//  i0.x = dot( isX, vec3( 1.0 ) );\\n  i0.x = isX.x + isX.y + isX.z;\\n  i0.yzw = 1.0 - isX;\\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\\n  i0.y += isYZ.x + isYZ.y;\\n  i0.zw += 1.0 - isYZ.xy;\\n  i0.z += isYZ.z;\\n  i0.w += 1.0 - isYZ.z;\\n\\n  // i0 now contains the unique values 0,1,2,3 in each channel\\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\\n  vec4 x1 = x0 - i1 + C.xxxx;\\n  vec4 x2 = x0 - i2 + C.yyyy;\\n  vec4 x3 = x0 - i3 + C.zzzz;\\n  vec4 x4 = x0 + C.wwww;\\n\\n// Permutations\\n  i = mod289_1_0(i);\\n  float j0 = permute_1_1( permute_1_1( permute_1_1( permute_1_1(i.w) + i.z) + i.y) + i.x);\\n  vec4 j1 = permute_1_1( permute_1_1( permute_1_1( permute_1_1 (\\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n  vec4 p0_1_5 = grad4_1_3(j0,   ip);\\n  vec4 p1 = grad4_1_3(j1.x, ip);\\n  vec4 p2 = grad4_1_3(j1.y, ip);\\n  vec4 p3 = grad4_1_3(j1.z, ip);\\n  vec4 p4 = grad4_1_3(j1.w, ip);\\n\\n// Normalise gradients\\n  vec4 norm = taylorInvSqrt_1_2(vec4(dot(p0_1_5,p0_1_5), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_1_5 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n  p4 *= taylorInvSqrt_1_2(dot(p4,p4));\\n\\n// Mix contributions from the five corners\\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\\n  m0 = m0 * m0;\\n  m1 = m1 * m1;\\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0_1_5, x0 ), dot( p1, x1 ), dot( p2, x2 )))\\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\\n\\n  }\\n\\n\\n\\n\\nvoid main() {\\n  vec3 color = vNormal * (snoise_1_4(vec4(vPosition, time)) + 0.01);\\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvbW9kdWxlcy9mcmFnbWVudC5nbHNsLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXBwL21vZHVsZXMvZnJhZ21lbnQuZ2xzbD8wN2RiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCIjZGVmaW5lIEdMU0xJRlkgMVxcbnZhcnlpbmcgdmVjMyB2UG9zaXRpb247XFxudmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuXFxudW5pZm9ybSBmbG9hdCB0aW1lO1xcblxcbi8vXFxuLy8gRGVzY3JpcHRpb24gOiBBcnJheSBhbmQgdGV4dHVyZWxlc3MgR0xTTCAyRC8zRC80RCBzaW1wbGV4XFxuLy8gICAgICAgICAgICAgICBub2lzZSBmdW5jdGlvbnMuXFxuLy8gICAgICBBdXRob3IgOiBJYW4gTWNFd2FuLCBBc2hpbWEgQXJ0cy5cXG4vLyAgTWFpbnRhaW5lciA6IGlqbVxcbi8vICAgICBMYXN0bW9kIDogMjAxMTA4MjIgKGlqbSlcXG4vLyAgICAgTGljZW5zZSA6IENvcHlyaWdodCAoQykgMjAxMSBBc2hpbWEgQXJ0cy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cXG4vLyAgICAgICAgICAgICAgIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZS5cXG4vLyAgICAgICAgICAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9hc2hpbWEvd2ViZ2wtbm9pc2VcXG4vL1xcblxcbnZlYzQgbW9kMjg5XzFfMCh2ZWM0IHgpIHtcXG4gIHJldHVybiB4IC0gZmxvb3IoeCAqICgxLjAgLyAyODkuMCkpICogMjg5LjA7IH1cXG5cXG5mbG9hdCBtb2QyODlfMV8wKGZsb2F0IHgpIHtcXG4gIHJldHVybiB4IC0gZmxvb3IoeCAqICgxLjAgLyAyODkuMCkpICogMjg5LjA7IH1cXG5cXG52ZWM0IHBlcm11dGVfMV8xKHZlYzQgeCkge1xcbiAgICAgcmV0dXJuIG1vZDI4OV8xXzAoKCh4KjM0LjApKzEuMCkqeCk7XFxufVxcblxcbmZsb2F0IHBlcm11dGVfMV8xKGZsb2F0IHgpIHtcXG4gICAgIHJldHVybiBtb2QyODlfMV8wKCgoeCozNC4wKSsxLjApKngpO1xcbn1cXG5cXG52ZWM0IHRheWxvckludlNxcnRfMV8yKHZlYzQgcilcXG57XFxuICByZXR1cm4gMS43OTI4NDI5MTQwMDE1OSAtIDAuODUzNzM0NzIwOTUzMTQgKiByO1xcbn1cXG5cXG5mbG9hdCB0YXlsb3JJbnZTcXJ0XzFfMihmbG9hdCByKVxcbntcXG4gIHJldHVybiAxLjc5Mjg0MjkxNDAwMTU5IC0gMC44NTM3MzQ3MjA5NTMxNCAqIHI7XFxufVxcblxcbnZlYzQgZ3JhZDRfMV8zKGZsb2F0IGosIHZlYzQgaXApXFxuICB7XFxuICBjb25zdCB2ZWM0IG9uZXMgPSB2ZWM0KDEuMCwgMS4wLCAxLjAsIC0xLjApO1xcbiAgdmVjNCBwLHM7XFxuXFxuICBwLnh5eiA9IGZsb29yKCBmcmFjdCAodmVjMyhqKSAqIGlwLnh5eikgKiA3LjApICogaXAueiAtIDEuMDtcXG4gIHAudyA9IDEuNSAtIGRvdChhYnMocC54eXopLCBvbmVzLnh5eik7XFxuICBzID0gdmVjNChsZXNzVGhhbihwLCB2ZWM0KDAuMCkpKTtcXG4gIHAueHl6ID0gcC54eXogKyAocy54eXoqMi4wIC0gMS4wKSAqIHMud3d3O1xcblxcbiAgcmV0dXJuIHA7XFxuICB9XFxuXFxuLy8gKHNxcnQoNSkgLSAxKS80ID0gRjQsIHVzZWQgb25jZSBiZWxvd1xcbiNkZWZpbmUgRjQgMC4zMDkwMTY5OTQzNzQ5NDc0NTFcXG5cXG5mbG9hdCBzbm9pc2VfMV80KHZlYzQgdilcXG4gIHtcXG4gIGNvbnN0IHZlYzQgIEMgPSB2ZWM0KCAwLjEzODE5NjYwMTEyNTAxMSwgIC8vICg1IC0gc3FydCg1KSkvMjAgIEc0XFxuICAgICAgICAgICAgICAgICAgICAgICAgMC4yNzYzOTMyMDIyNTAwMjEsICAvLyAyICogRzRcXG4gICAgICAgICAgICAgICAgICAgICAgICAwLjQxNDU4OTgwMzM3NTAzMiwgIC8vIDMgKiBHNFxcbiAgICAgICAgICAgICAgICAgICAgICAgLTAuNDQ3MjEzNTk1NDk5OTU4KTsgLy8gLTEgKyA0ICogRzRcXG5cXG4vLyBGaXJzdCBjb3JuZXJcXG4gIHZlYzQgaSAgPSBmbG9vcih2ICsgZG90KHYsIHZlYzQoRjQpKSApO1xcbiAgdmVjNCB4MCA9IHYgLSAgIGkgKyBkb3QoaSwgQy54eHh4KTtcXG5cXG4vLyBPdGhlciBjb3JuZXJzXFxuXFxuLy8gUmFuayBzb3J0aW5nIG9yaWdpbmFsbHkgY29udHJpYnV0ZWQgYnkgQmlsbCBMaWNlYS1LYW5lLCBBTUQgKGZvcm1lcmx5IEFUSSlcXG4gIHZlYzQgaTA7XFxuICB2ZWMzIGlzWCA9IHN0ZXAoIHgwLnl6dywgeDAueHh4ICk7XFxuICB2ZWMzIGlzWVogPSBzdGVwKCB4MC56d3csIHgwLnl5eiApO1xcbi8vICBpMC54ID0gZG90KCBpc1gsIHZlYzMoIDEuMCApICk7XFxuICBpMC54ID0gaXNYLnggKyBpc1gueSArIGlzWC56O1xcbiAgaTAueXp3ID0gMS4wIC0gaXNYO1xcbi8vICBpMC55ICs9IGRvdCggaXNZWi54eSwgdmVjMiggMS4wICkgKTtcXG4gIGkwLnkgKz0gaXNZWi54ICsgaXNZWi55O1xcbiAgaTAuencgKz0gMS4wIC0gaXNZWi54eTtcXG4gIGkwLnogKz0gaXNZWi56O1xcbiAgaTAudyArPSAxLjAgLSBpc1laLno7XFxuXFxuICAvLyBpMCBub3cgY29udGFpbnMgdGhlIHVuaXF1ZSB2YWx1ZXMgMCwxLDIsMyBpbiBlYWNoIGNoYW5uZWxcXG4gIHZlYzQgaTMgPSBjbGFtcCggaTAsIDAuMCwgMS4wICk7XFxuICB2ZWM0IGkyID0gY2xhbXAoIGkwLTEuMCwgMC4wLCAxLjAgKTtcXG4gIHZlYzQgaTEgPSBjbGFtcCggaTAtMi4wLCAwLjAsIDEuMCApO1xcblxcbiAgLy8gIHgwID0geDAgLSAwLjAgKyAwLjAgKiBDLnh4eHhcXG4gIC8vICB4MSA9IHgwIC0gaTEgICsgMS4wICogQy54eHh4XFxuICAvLyAgeDIgPSB4MCAtIGkyICArIDIuMCAqIEMueHh4eFxcbiAgLy8gIHgzID0geDAgLSBpMyAgKyAzLjAgKiBDLnh4eHhcXG4gIC8vICB4NCA9IHgwIC0gMS4wICsgNC4wICogQy54eHh4XFxuICB2ZWM0IHgxID0geDAgLSBpMSArIEMueHh4eDtcXG4gIHZlYzQgeDIgPSB4MCAtIGkyICsgQy55eXl5O1xcbiAgdmVjNCB4MyA9IHgwIC0gaTMgKyBDLnp6eno7XFxuICB2ZWM0IHg0ID0geDAgKyBDLnd3d3c7XFxuXFxuLy8gUGVybXV0YXRpb25zXFxuICBpID0gbW9kMjg5XzFfMChpKTtcXG4gIGZsb2F0IGowID0gcGVybXV0ZV8xXzEoIHBlcm11dGVfMV8xKCBwZXJtdXRlXzFfMSggcGVybXV0ZV8xXzEoaS53KSArIGkueikgKyBpLnkpICsgaS54KTtcXG4gIHZlYzQgajEgPSBwZXJtdXRlXzFfMSggcGVybXV0ZV8xXzEoIHBlcm11dGVfMV8xKCBwZXJtdXRlXzFfMSAoXFxuICAgICAgICAgICAgIGkudyArIHZlYzQoaTEudywgaTIudywgaTMudywgMS4wICkpXFxuICAgICAgICAgICArIGkueiArIHZlYzQoaTEueiwgaTIueiwgaTMueiwgMS4wICkpXFxuICAgICAgICAgICArIGkueSArIHZlYzQoaTEueSwgaTIueSwgaTMueSwgMS4wICkpXFxuICAgICAgICAgICArIGkueCArIHZlYzQoaTEueCwgaTIueCwgaTMueCwgMS4wICkpO1xcblxcbi8vIEdyYWRpZW50czogN3g3eDYgcG9pbnRzIG92ZXIgYSBjdWJlLCBtYXBwZWQgb250byBhIDQtY3Jvc3MgcG9seXRvcGVcXG4vLyA3KjcqNiA9IDI5NCwgd2hpY2ggaXMgY2xvc2UgdG8gdGhlIHJpbmcgc2l6ZSAxNyoxNyA9IDI4OS5cXG4gIHZlYzQgaXAgPSB2ZWM0KDEuMC8yOTQuMCwgMS4wLzQ5LjAsIDEuMC83LjAsIDAuMCkgO1xcblxcbiAgdmVjNCBwMF8xXzUgPSBncmFkNF8xXzMoajAsICAgaXApO1xcbiAgdmVjNCBwMSA9IGdyYWQ0XzFfMyhqMS54LCBpcCk7XFxuICB2ZWM0IHAyID0gZ3JhZDRfMV8zKGoxLnksIGlwKTtcXG4gIHZlYzQgcDMgPSBncmFkNF8xXzMoajEueiwgaXApO1xcbiAgdmVjNCBwNCA9IGdyYWQ0XzFfMyhqMS53LCBpcCk7XFxuXFxuLy8gTm9ybWFsaXNlIGdyYWRpZW50c1xcbiAgdmVjNCBub3JtID0gdGF5bG9ySW52U3FydF8xXzIodmVjNChkb3QocDBfMV81LHAwXzFfNSksIGRvdChwMSxwMSksIGRvdChwMiwgcDIpLCBkb3QocDMscDMpKSk7XFxuICBwMF8xXzUgKj0gbm9ybS54O1xcbiAgcDEgKj0gbm9ybS55O1xcbiAgcDIgKj0gbm9ybS56O1xcbiAgcDMgKj0gbm9ybS53O1xcbiAgcDQgKj0gdGF5bG9ySW52U3FydF8xXzIoZG90KHA0LHA0KSk7XFxuXFxuLy8gTWl4IGNvbnRyaWJ1dGlvbnMgZnJvbSB0aGUgZml2ZSBjb3JuZXJzXFxuICB2ZWMzIG0wID0gbWF4KDAuNiAtIHZlYzMoZG90KHgwLHgwKSwgZG90KHgxLHgxKSwgZG90KHgyLHgyKSksIDAuMCk7XFxuICB2ZWMyIG0xID0gbWF4KDAuNiAtIHZlYzIoZG90KHgzLHgzKSwgZG90KHg0LHg0KSAgICAgICAgICAgICksIDAuMCk7XFxuICBtMCA9IG0wICogbTA7XFxuICBtMSA9IG0xICogbTE7XFxuICByZXR1cm4gNDkuMCAqICggZG90KG0wKm0wLCB2ZWMzKCBkb3QoIHAwXzFfNSwgeDAgKSwgZG90KCBwMSwgeDEgKSwgZG90KCBwMiwgeDIgKSkpXFxuICAgICAgICAgICAgICAgKyBkb3QobTEqbTEsIHZlYzIoIGRvdCggcDMsIHgzICksIGRvdCggcDQsIHg0ICkgKSApICkgO1xcblxcbiAgfVxcblxcblxcblxcblxcbnZvaWQgbWFpbigpIHtcXG4gIHZlYzMgY29sb3IgPSB2Tm9ybWFsICogKHNub2lzZV8xXzQodmVjNCh2UG9zaXRpb24sIHRpbWUpKSArIDAuMDEpO1xcbiAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgMS4wKTtcXG59XFxuXCJcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC9tb2R1bGVzL2ZyYWdtZW50Lmdsc2xcbi8vIG1vZHVsZSBpZCA9IC4vYXBwL21vZHVsZXMvZnJhZ21lbnQuZ2xzbFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/modules/fragment.glsl\n");

/***/ }),

/***/ "./app/modules/vertex.glsl":
/*!*********************************!*\
  !*** ./app/modules/vertex.glsl ***!
  \*********************************/
/*! dynamic exports provided */
/*! exports used: default */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports) {

eval("module.exports = \"#define GLSLIFY 1\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\n\\nuniform float time;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec4 mod289_1_0(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nfloat mod289_1_0(float x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\\n\\nvec4 permute_1_1(vec4 x) {\\n     return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nfloat permute_1_1(float x) {\\n     return mod289_1_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_2(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat taylorInvSqrt_1_2(float r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec4 grad4_1_3(float j, vec4 ip)\\n  {\\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n  vec4 p,s;\\n\\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n  s = vec4(lessThan(p, vec4(0.0)));\\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\\n\\n  return p;\\n  }\\n\\n// (sqrt(5) - 1)/4 = F4, used once below\\n#define F4 0.309016994374947451\\n\\nfloat snoise_1_4(vec4 v)\\n  {\\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\\n                        0.276393202250021,  // 2 * G4\\n                        0.414589803375032,  // 3 * G4\\n                       -0.447213595499958); // -1 + 4 * G4\\n\\n// First corner\\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\\n  vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n// Other corners\\n\\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\\n  vec4 i0;\\n  vec3 isX = step( x0.yzw, x0.xxx );\\n  vec3 isYZ = step( x0.zww, x0.yyz );\\n//  i0.x = dot( isX, vec3( 1.0 ) );\\n  i0.x = isX.x + isX.y + isX.z;\\n  i0.yzw = 1.0 - isX;\\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\\n  i0.y += isYZ.x + isYZ.y;\\n  i0.zw += 1.0 - isYZ.xy;\\n  i0.z += isYZ.z;\\n  i0.w += 1.0 - isYZ.z;\\n\\n  // i0 now contains the unique values 0,1,2,3 in each channel\\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\\n  vec4 x1 = x0 - i1 + C.xxxx;\\n  vec4 x2 = x0 - i2 + C.yyyy;\\n  vec4 x3 = x0 - i3 + C.zzzz;\\n  vec4 x4 = x0 + C.wwww;\\n\\n// Permutations\\n  i = mod289_1_0(i);\\n  float j0 = permute_1_1( permute_1_1( permute_1_1( permute_1_1(i.w) + i.z) + i.y) + i.x);\\n  vec4 j1 = permute_1_1( permute_1_1( permute_1_1( permute_1_1 (\\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n  vec4 p0_1_5 = grad4_1_3(j0,   ip);\\n  vec4 p1 = grad4_1_3(j1.x, ip);\\n  vec4 p2 = grad4_1_3(j1.y, ip);\\n  vec4 p3 = grad4_1_3(j1.z, ip);\\n  vec4 p4 = grad4_1_3(j1.w, ip);\\n\\n// Normalise gradients\\n  vec4 norm = taylorInvSqrt_1_2(vec4(dot(p0_1_5,p0_1_5), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_1_5 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n  p4 *= taylorInvSqrt_1_2(dot(p4,p4));\\n\\n// Mix contributions from the five corners\\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\\n  m0 = m0 * m0;\\n  m1 = m1 * m1;\\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0_1_5, x0 ), dot( p1, x1 ), dot( p2, x2 )))\\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\\n\\n  }\\n\\n\\n\\n\\nvoid main() {\\n  float displace = snoise_1_4(vec4(position, time));\\n\\n  vPosition = position + normal * displace * 0.1;\\n  vNormal = normal;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( vPosition, 1.0 );\\n}\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvbW9kdWxlcy92ZXJ0ZXguZ2xzbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwcC9tb2R1bGVzL3ZlcnRleC5nbHNsPzNmOGIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIiNkZWZpbmUgR0xTTElGWSAxXFxudmFyeWluZyB2ZWMzIHZQb3NpdGlvbjtcXG52YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG5cXG51bmlmb3JtIGZsb2F0IHRpbWU7XFxuXFxuLy9cXG4vLyBEZXNjcmlwdGlvbiA6IEFycmF5IGFuZCB0ZXh0dXJlbGVzcyBHTFNMIDJELzNELzREIHNpbXBsZXhcXG4vLyAgICAgICAgICAgICAgIG5vaXNlIGZ1bmN0aW9ucy5cXG4vLyAgICAgIEF1dGhvciA6IElhbiBNY0V3YW4sIEFzaGltYSBBcnRzLlxcbi8vICBNYWludGFpbmVyIDogaWptXFxuLy8gICAgIExhc3Rtb2QgOiAyMDExMDgyMiAoaWptKVxcbi8vICAgICBMaWNlbnNlIDogQ29weXJpZ2h0IChDKSAyMDExIEFzaGltYSBBcnRzLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxcbi8vICAgICAgICAgICAgICAgRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBmaWxlLlxcbi8vICAgICAgICAgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2FzaGltYS93ZWJnbC1ub2lzZVxcbi8vXFxuXFxudmVjNCBtb2QyODlfMV8wKHZlYzQgeCkge1xcbiAgcmV0dXJuIHggLSBmbG9vcih4ICogKDEuMCAvIDI4OS4wKSkgKiAyODkuMDsgfVxcblxcbmZsb2F0IG1vZDI4OV8xXzAoZmxvYXQgeCkge1xcbiAgcmV0dXJuIHggLSBmbG9vcih4ICogKDEuMCAvIDI4OS4wKSkgKiAyODkuMDsgfVxcblxcbnZlYzQgcGVybXV0ZV8xXzEodmVjNCB4KSB7XFxuICAgICByZXR1cm4gbW9kMjg5XzFfMCgoKHgqMzQuMCkrMS4wKSp4KTtcXG59XFxuXFxuZmxvYXQgcGVybXV0ZV8xXzEoZmxvYXQgeCkge1xcbiAgICAgcmV0dXJuIG1vZDI4OV8xXzAoKCh4KjM0LjApKzEuMCkqeCk7XFxufVxcblxcbnZlYzQgdGF5bG9ySW52U3FydF8xXzIodmVjNCByKVxcbntcXG4gIHJldHVybiAxLjc5Mjg0MjkxNDAwMTU5IC0gMC44NTM3MzQ3MjA5NTMxNCAqIHI7XFxufVxcblxcbmZsb2F0IHRheWxvckludlNxcnRfMV8yKGZsb2F0IHIpXFxue1xcbiAgcmV0dXJuIDEuNzkyODQyOTE0MDAxNTkgLSAwLjg1MzczNDcyMDk1MzE0ICogcjtcXG59XFxuXFxudmVjNCBncmFkNF8xXzMoZmxvYXQgaiwgdmVjNCBpcClcXG4gIHtcXG4gIGNvbnN0IHZlYzQgb25lcyA9IHZlYzQoMS4wLCAxLjAsIDEuMCwgLTEuMCk7XFxuICB2ZWM0IHAscztcXG5cXG4gIHAueHl6ID0gZmxvb3IoIGZyYWN0ICh2ZWMzKGopICogaXAueHl6KSAqIDcuMCkgKiBpcC56IC0gMS4wO1xcbiAgcC53ID0gMS41IC0gZG90KGFicyhwLnh5eiksIG9uZXMueHl6KTtcXG4gIHMgPSB2ZWM0KGxlc3NUaGFuKHAsIHZlYzQoMC4wKSkpO1xcbiAgcC54eXogPSBwLnh5eiArIChzLnh5eioyLjAgLSAxLjApICogcy53d3c7XFxuXFxuICByZXR1cm4gcDtcXG4gIH1cXG5cXG4vLyAoc3FydCg1KSAtIDEpLzQgPSBGNCwgdXNlZCBvbmNlIGJlbG93XFxuI2RlZmluZSBGNCAwLjMwOTAxNjk5NDM3NDk0NzQ1MVxcblxcbmZsb2F0IHNub2lzZV8xXzQodmVjNCB2KVxcbiAge1xcbiAgY29uc3QgdmVjNCAgQyA9IHZlYzQoIDAuMTM4MTk2NjAxMTI1MDExLCAgLy8gKDUgLSBzcXJ0KDUpKS8yMCAgRzRcXG4gICAgICAgICAgICAgICAgICAgICAgICAwLjI3NjM5MzIwMjI1MDAyMSwgIC8vIDIgKiBHNFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDAuNDE0NTg5ODAzMzc1MDMyLCAgLy8gMyAqIEc0XFxuICAgICAgICAgICAgICAgICAgICAgICAtMC40NDcyMTM1OTU0OTk5NTgpOyAvLyAtMSArIDQgKiBHNFxcblxcbi8vIEZpcnN0IGNvcm5lclxcbiAgdmVjNCBpICA9IGZsb29yKHYgKyBkb3QodiwgdmVjNChGNCkpICk7XFxuICB2ZWM0IHgwID0gdiAtICAgaSArIGRvdChpLCBDLnh4eHgpO1xcblxcbi8vIE90aGVyIGNvcm5lcnNcXG5cXG4vLyBSYW5rIHNvcnRpbmcgb3JpZ2luYWxseSBjb250cmlidXRlZCBieSBCaWxsIExpY2VhLUthbmUsIEFNRCAoZm9ybWVybHkgQVRJKVxcbiAgdmVjNCBpMDtcXG4gIHZlYzMgaXNYID0gc3RlcCggeDAueXp3LCB4MC54eHggKTtcXG4gIHZlYzMgaXNZWiA9IHN0ZXAoIHgwLnp3dywgeDAueXl6ICk7XFxuLy8gIGkwLnggPSBkb3QoIGlzWCwgdmVjMyggMS4wICkgKTtcXG4gIGkwLnggPSBpc1gueCArIGlzWC55ICsgaXNYLno7XFxuICBpMC55encgPSAxLjAgLSBpc1g7XFxuLy8gIGkwLnkgKz0gZG90KCBpc1laLnh5LCB2ZWMyKCAxLjAgKSApO1xcbiAgaTAueSArPSBpc1laLnggKyBpc1laLnk7XFxuICBpMC56dyArPSAxLjAgLSBpc1laLnh5O1xcbiAgaTAueiArPSBpc1laLno7XFxuICBpMC53ICs9IDEuMCAtIGlzWVouejtcXG5cXG4gIC8vIGkwIG5vdyBjb250YWlucyB0aGUgdW5pcXVlIHZhbHVlcyAwLDEsMiwzIGluIGVhY2ggY2hhbm5lbFxcbiAgdmVjNCBpMyA9IGNsYW1wKCBpMCwgMC4wLCAxLjAgKTtcXG4gIHZlYzQgaTIgPSBjbGFtcCggaTAtMS4wLCAwLjAsIDEuMCApO1xcbiAgdmVjNCBpMSA9IGNsYW1wKCBpMC0yLjAsIDAuMCwgMS4wICk7XFxuXFxuICAvLyAgeDAgPSB4MCAtIDAuMCArIDAuMCAqIEMueHh4eFxcbiAgLy8gIHgxID0geDAgLSBpMSAgKyAxLjAgKiBDLnh4eHhcXG4gIC8vICB4MiA9IHgwIC0gaTIgICsgMi4wICogQy54eHh4XFxuICAvLyAgeDMgPSB4MCAtIGkzICArIDMuMCAqIEMueHh4eFxcbiAgLy8gIHg0ID0geDAgLSAxLjAgKyA0LjAgKiBDLnh4eHhcXG4gIHZlYzQgeDEgPSB4MCAtIGkxICsgQy54eHh4O1xcbiAgdmVjNCB4MiA9IHgwIC0gaTIgKyBDLnl5eXk7XFxuICB2ZWM0IHgzID0geDAgLSBpMyArIEMuenp6ejtcXG4gIHZlYzQgeDQgPSB4MCArIEMud3d3dztcXG5cXG4vLyBQZXJtdXRhdGlvbnNcXG4gIGkgPSBtb2QyODlfMV8wKGkpO1xcbiAgZmxvYXQgajAgPSBwZXJtdXRlXzFfMSggcGVybXV0ZV8xXzEoIHBlcm11dGVfMV8xKCBwZXJtdXRlXzFfMShpLncpICsgaS56KSArIGkueSkgKyBpLngpO1xcbiAgdmVjNCBqMSA9IHBlcm11dGVfMV8xKCBwZXJtdXRlXzFfMSggcGVybXV0ZV8xXzEoIHBlcm11dGVfMV8xIChcXG4gICAgICAgICAgICAgaS53ICsgdmVjNChpMS53LCBpMi53LCBpMy53LCAxLjAgKSlcXG4gICAgICAgICAgICsgaS56ICsgdmVjNChpMS56LCBpMi56LCBpMy56LCAxLjAgKSlcXG4gICAgICAgICAgICsgaS55ICsgdmVjNChpMS55LCBpMi55LCBpMy55LCAxLjAgKSlcXG4gICAgICAgICAgICsgaS54ICsgdmVjNChpMS54LCBpMi54LCBpMy54LCAxLjAgKSk7XFxuXFxuLy8gR3JhZGllbnRzOiA3eDd4NiBwb2ludHMgb3ZlciBhIGN1YmUsIG1hcHBlZCBvbnRvIGEgNC1jcm9zcyBwb2x5dG9wZVxcbi8vIDcqNyo2ID0gMjk0LCB3aGljaCBpcyBjbG9zZSB0byB0aGUgcmluZyBzaXplIDE3KjE3ID0gMjg5LlxcbiAgdmVjNCBpcCA9IHZlYzQoMS4wLzI5NC4wLCAxLjAvNDkuMCwgMS4wLzcuMCwgMC4wKSA7XFxuXFxuICB2ZWM0IHAwXzFfNSA9IGdyYWQ0XzFfMyhqMCwgICBpcCk7XFxuICB2ZWM0IHAxID0gZ3JhZDRfMV8zKGoxLngsIGlwKTtcXG4gIHZlYzQgcDIgPSBncmFkNF8xXzMoajEueSwgaXApO1xcbiAgdmVjNCBwMyA9IGdyYWQ0XzFfMyhqMS56LCBpcCk7XFxuICB2ZWM0IHA0ID0gZ3JhZDRfMV8zKGoxLncsIGlwKTtcXG5cXG4vLyBOb3JtYWxpc2UgZ3JhZGllbnRzXFxuICB2ZWM0IG5vcm0gPSB0YXlsb3JJbnZTcXJ0XzFfMih2ZWM0KGRvdChwMF8xXzUscDBfMV81KSwgZG90KHAxLHAxKSwgZG90KHAyLCBwMiksIGRvdChwMyxwMykpKTtcXG4gIHAwXzFfNSAqPSBub3JtLng7XFxuICBwMSAqPSBub3JtLnk7XFxuICBwMiAqPSBub3JtLno7XFxuICBwMyAqPSBub3JtLnc7XFxuICBwNCAqPSB0YXlsb3JJbnZTcXJ0XzFfMihkb3QocDQscDQpKTtcXG5cXG4vLyBNaXggY29udHJpYnV0aW9ucyBmcm9tIHRoZSBmaXZlIGNvcm5lcnNcXG4gIHZlYzMgbTAgPSBtYXgoMC42IC0gdmVjMyhkb3QoeDAseDApLCBkb3QoeDEseDEpLCBkb3QoeDIseDIpKSwgMC4wKTtcXG4gIHZlYzIgbTEgPSBtYXgoMC42IC0gdmVjMihkb3QoeDMseDMpLCBkb3QoeDQseDQpICAgICAgICAgICAgKSwgMC4wKTtcXG4gIG0wID0gbTAgKiBtMDtcXG4gIG0xID0gbTEgKiBtMTtcXG4gIHJldHVybiA0OS4wICogKCBkb3QobTAqbTAsIHZlYzMoIGRvdCggcDBfMV81LCB4MCApLCBkb3QoIHAxLCB4MSApLCBkb3QoIHAyLCB4MiApKSlcXG4gICAgICAgICAgICAgICArIGRvdChtMSptMSwgdmVjMiggZG90KCBwMywgeDMgKSwgZG90KCBwNCwgeDQgKSApICkgKSA7XFxuXFxuICB9XFxuXFxuXFxuXFxuXFxudm9pZCBtYWluKCkge1xcbiAgZmxvYXQgZGlzcGxhY2UgPSBzbm9pc2VfMV80KHZlYzQocG9zaXRpb24sIHRpbWUpKTtcXG5cXG4gIHZQb3NpdGlvbiA9IHBvc2l0aW9uICsgbm9ybWFsICogZGlzcGxhY2UgKiAwLjE7XFxuICB2Tm9ybWFsID0gbm9ybWFsO1xcblxcbiAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCggdlBvc2l0aW9uLCAxLjAgKTtcXG59XFxuXCJcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC9tb2R1bGVzL3ZlcnRleC5nbHNsXG4vLyBtb2R1bGUgaWQgPSAuL2FwcC9tb2R1bGVzL3ZlcnRleC5nbHNsXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/modules/vertex.glsl\n");

/***/ })

},["./app/app.js"]);